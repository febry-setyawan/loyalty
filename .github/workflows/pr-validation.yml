# Pull Request Validation Workflow
# Validates pull requests with fast feedback
name: PR Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

env:
  JAVA_VERSION: '17'

jobs:
  # Validate common library first
  pr-validation-common:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Compile and validate common library
        run: |
          cd shared/libs/common
          mvn clean compile -DskipTests

      - name: Run common library unit tests
        run: |
          cd shared/libs/common
          mvn test -Dspring.profiles.active=test

      - name: Check common library code formatting
        run: |
          cd shared/libs/common
          mvn spotless:check || true

      - name: Install common library
        run: |
          cd shared/libs/common
          mvn clean install -DskipTests

  # Fast validation for PR feedback on services
  pr-validation:
    runs-on: ubuntu-latest
    needs: pr-validation-common
    strategy:
      matrix:
        service: [user-service, point-service, rewards-service, admin-service]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Compile and validate
        run: |
          cd services/${{ matrix.service }}
          mvn clean compile -DskipTests

      - name: Run unit tests only
        run: |
          cd services/${{ matrix.service }}
          mvn test -Dspring.profiles.active=test

      - name: Check code formatting
        run: |
          cd services/${{ matrix.service }}
          mvn spotless:check || true

  # Dependency vulnerability scan for PRs
  pr-security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Run dependency vulnerability scan
        run: |
          # Scan common library with configured settings
          echo "Scanning common library..."
          cd shared/libs/common
          mvn org.owasp:dependency-check-maven:check -DnvdApiKey=${{ secrets.NVD_API_KEY }} -DassemblyAnalyzerEnabled=false -Dformat=SARIF || true
          cd ../../..
          
          # Scan each service for vulnerabilities with configured settings  
          for service in user-service point-service rewards-service admin-service; do
            echo "Scanning $service..."
            cd services/$service
            mvn org.owasp:dependency-check-maven:check -DnvdApiKey=${{ secrets.NVD_API_KEY }} -DassemblyAnalyzerEnabled=false -Dformat=SARIF || true
            cd ../..
          done
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}